{
	"info": {
		"_postman_id": "6631407e-a046-4e16-8c9b-81daabf4bc61",
		"name": "cms",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"let schema = {\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\"id\", \"name\",\"email\",\"password\",\"role\"],\r",
									"    \"properties\": {\r",
									"        \"id\": {\"type\": \"integer\"},\r",
									"        \"name\": {\"type\": \"string\"},\r",
									"        \"email\": {\"type\": \"string\"},\r",
									"        \"password\": {\"type\": \"string\"},\r",
									"        \"role\": {\"type\": \"string\"}\r",
									"    }\r",
									"}\r",
									"pm.test(\"User response server\", function() {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/users/:id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "All_Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BASE_URL}}/users"
					},
					"response": []
				},
				{
					"name": "New_User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 201\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Nikita",
									"type": "text"
								},
								{
									"key": "email",
									"value": "66688@YANDEX.RU",
									"type": "text"
								},
								{
									"key": "password",
									"value": "qwerty1234",
									"type": "text"
								},
								{
									"key": "role",
									"value": "admin",
									"type": "text"
								}
							]
						},
						"url": "{{BASE_URL}}/users/"
					},
					"response": []
				},
				{
					"name": "Change_User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 201\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n      \"name\": \"JonUik\",\r\n      \"password\": \"66666\",\r\n      \"email\": \"jon@yyandex.ru\",\r\n      \"role\": \"user\"\r\n\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/users/:id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/users/:id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "9"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pages",
			"item": [
				{
					"name": "Page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"\r",
									"let scheme = {\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\"id\", \"url\",\"title\",\"content\",\"userId\"],\r",
									"    \"properties\": {\r",
									"        \"id\": {\"type\": \"integer\"},\r",
									"        \"url\": {\"type\": \"string\"},\r",
									"        \"title\": {\"type\": \"string\"},\r",
									"        \"content\": {\"type\": \"string\"},\r",
									"        \"userId\": {\"type\": \"integer\"}\r",
									"    }\r",
									"}\r",
									"pm.test(\"Page response server\", function() {\r",
									"    pm.response.to.have.jsonSchema(scheme);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/pages/:id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"pages",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "All_Pages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BASE_URL}}/pages"
					},
					"response": []
				},
				{
					"name": "Page_author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"\r",
									"let scheme = {\r",
									"    \"type\": \"array\",\r",
									"    \"items\": {\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\"id\", \"url\",\"title\",\"content\",\"userId\"],\r",
									"    \"properties\": {\r",
									"        \"id\": {\"type\": \"integer\"},\r",
									"        \"url\": {\"type\": \"string\"},\r",
									"        \"title\": {\"type\": \"string\"},\r",
									"        \"content\": {\"type\": \"string\"},\r",
									"        \"userId\": {\"type\": \"integer\"}\r",
									"    }\r",
									"}\r",
									"}\r",
									"pm.test(\"Page author response server\", function() {\r",
									"    pm.response.to.have.jsonSchema(scheme);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/pages/?userId=1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"pages",
								""
							],
							"query": [
								{
									"key": "userId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New_Page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"url\": \"about-us\", \r\n\"title\": \"About us\", \r\n\"content\": \"Some content...\", \r\n\"userId\": 5 \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BASE_URL}}/pages"
					},
					"response": []
				},
				{
					"name": "Change_Page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 201\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n     \"content\": \"Hello world\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/pages/:id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"pages",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_Page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/pages/:id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"pages",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"let scheme = {\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\"id\", \"pageId\",\"userId\",\"content\"],\r",
									"    \"properties\": {\r",
									"        \"id\": {\"type\": \"integer\"},\r",
									"        \"pageId\": {\"type\": \"integer\"},\r",
									"        \"userId\": {\"type\": \"integer\"},\r",
									"        \"content\": {\"type\": \"string\"}\r",
									"    }\r",
									"}\r",
									"pm.test(\"Comment response server\", function() {\r",
									"    pm.response.to.have.jsonSchema(scheme);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/comments/:id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"comments",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BASE_URL}}/comments"
					},
					"response": []
				},
				{
					"name": "Commmets_Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/comments/?userId=3",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"comments",
								""
							],
							"query": [
								{
									"key": "userId",
									"value": "3",
									"description": "get all comments to author"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New_Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 201\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n      \"pageId\": 4,\r\n      \"userId\": 5,\r\n      \"content\": \"My comment #6...\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BASE_URL}}/comments/"
					},
					"response": []
				},
				{
					"name": "Change_Commnet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n      \"content\": \"My new comment #10 ......\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/comments/:id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"comments",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/comments/:id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"comments",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "5"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Settings",
			"item": [
				{
					"name": "Setting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"let scheme = {\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\"id\", \"theme\",\"userId\"],\r",
									"    \"properties\": {\r",
									"        \"id\": {\"type\": \"integer\"},\r",
									"        \"theme\": {\"type\": \"string\"},\r",
									"        \"userId\": {\"type\": \"integer\"}\r",
									"    }\r",
									"}\r",
									"pm.test(\"Setting response server\", function() {\r",
									"    pm.response.to.have.jsonSchema(scheme);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/settings/:id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"settings",
								":id"
							],
							"query": [
								{
									"key": "id",
									"value": "1",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "All_Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BASE_URL}}/settings"
					},
					"response": []
				},
				{
					"name": "New_Setting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n      \"theme\": \"Green\",\r\n      \"userId\": 4\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BASE_URL}}/settings"
					},
					"response": []
				},
				{
					"name": "Change_Setting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 201\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n      \"theme\": \"dark\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/settings/:id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"settings",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_Setting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Success Response 200\", function() {\r",
									"        pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/settings/:id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"settings",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BASE_URL",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}